version: 2

jobs:
  build:
    working_directory: /app
    docker:
      - image: sagacify/docker-circle-ci2.0:v17
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Remove volumes
          command: |
            wget https://raw.githubusercontent.com/Sagacify/ci-tools/master/remove-volumes-v2.sh
            chmod +x ./remove-volumes-v2.sh
            ./remove-volumes-v2.sh > docker-compose.tests.yml
      - run:
          name: Build image
          command: |
            docker-compose -f docker-compose.tests.yml build node
      - run:
          name: Run tests
          command: |
            docker-compose -f docker-compose.tests.yml run node npm test
      - run:
          name: Publish release
          command: |
            npx semantic-release
      - run:
          name: Capture old version
          # jq should be included in the base image
          command: |
            apk add --no-cache
            export OLD_VERSION="$(jq -r .version package.json)"
      - run:
          name: Update image with new package.json
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              docker create --name="app_container" app_node
              docker cp ./package.json app_container:/var/www/package.json
              docker commit app_container app_node
            fi
      - run:
          name: Capture new version
          command: |
            export NEW_VERSION="$(jq -r .version package.json)"
      - deploy:
          name: Push image to DockerHub
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] && [ "${OLD_VERSION}" != "${NEW_VERSION}" ]; then
              echo "{\"https://index.docker.io/v1/\":{\"auth\":\"<AUTH>\",\"email\":\"<EMAIL>\"}}" | sed "s/<EMAIL>/$HUB_EMAIL/;s/<AUTH>/$HUB_AUTH/" > ~/.dockercfg
              docker create --name="app_container" app_node
              docker tag app_node sagacify/$CIRCLE_PROJECT_REPONAME:v$CIRCLE_BUILD_NUM
              docker push sagacify/$CIRCLE_PROJECT_REPONAME
            else
              echo "No new version to push!"
            fi
      - deploy:
          name: Push dryrun image to DockerHub
          command: |
            case "${CIRCLE_BRANCH}" in
              "dryrun_"*)
                echo "{\"https://index.docker.io/v1/\":{\"auth\":\"<AUTH>\",\"email\":\"<EMAIL>\"}}" | sed "s/<EMAIL>/$HUB_EMAIL/;s/<AUTH>/$HUB_AUTH/" > ~/.dockercfg
                docker tag app_node sagacify/$CIRCLE_PROJECT_REPONAME:dryrun-v$CIRCLE_BUILD_NUM
                docker push sagacify/$CIRCLE_PROJECT_REPONAME
              ;;
            esac
workflows:
  version: 2
  main:
    jobs:
      - build:
          context: DockerHub
